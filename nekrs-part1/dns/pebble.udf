#include "udf.hpp"

static dfloat inlet_v;
static dfloat inlet_T;

void UDF_LoadKernels(occa::properties & kernelInfo)
{
  // get parameters from .par file
  dfloat D;
  dfloat Re;
  platform->par->extract("casedata", "D", D);
  platform->par->extract("casedata", "Re", Re);
  platform->par->extract("casedata", "inlet_T", inlet_T);

  // send parameter to device
  inlet_v = Re * 2e-5 / D / 0.1785;
  kernelInfo["defines/p_inlet_v"] = inlet_v;
  kernelInfo["defines/p_inlet_T"] = inlet_T;
}

void UDF_Setup(nrs_t *nrs)
{
  auto mesh = nrs->meshV;

  int n_gll_points = mesh->Np * mesh->Nelements;
  for (int n = 0; n < n_gll_points; ++n)
  {
    nrs->U[n + 0 * nrs->fieldOffset] = 0.0; // x-velocity
    nrs->U[n + 1 * nrs->fieldOffset] = 0.0; // y-velocity
    nrs->U[n + 2 * nrs->fieldOffset] = inlet_v; // z-velocity

    nrs->P[n] = 0.0; // pressure

    nrs->cds->S[n + 0 * nrs->fieldOffset] = inlet_T; // temperature
  }
}

void UDF_ExecuteStep(nrs_t *nrs, double time, int tstep)
{
}
