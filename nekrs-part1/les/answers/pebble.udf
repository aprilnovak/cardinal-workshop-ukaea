#include "udf.hpp"
#include "plugins/tavg.hpp"

void UDF_LoadKernels(occa::properties & kernelInfo)
{
  dfloat Re = 2000;
  dfloat rho = 1000;
  dfloat Cp = 4186;
  dfloat mu = 1e-3;
  dfloat D = 0.03;

  kernelInfo["defines/p_rho_Cp"] = rho * Cp;
  kernelInfo["defines/p_inlet_v"] = Re * mu / rho / D;

  tavg::buildKernel(kernelInfo);
}

void UDF_Setup(nrs_t *nrs)
{
  auto mesh = nrs->meshV;

  int n_gll_points = mesh->Np * mesh->Nelements;
  for (int n = 0; n < n_gll_points; ++n)
    nrs->U[n + 2 * nrs->fieldOffset] = 1.0; // z-velocity

  tavg::setup(nrs);
}

void UDF_ExecuteStep(nrs_t *nrs, double time, int tstep)
{
  tavg::run(time);

  if (nrs->isOutputStep)
    tavg::outfld();
}
